var gtdStatusThreadContainer=glThreadContainer.extend({_labelCount:null,_isCached:false,_typeActive:null,constructor:function(gtd){this._main=gtd;var search=this._createSearch();this.base(gtd,search);this.preventUnload=true;this._typeActive={};this.addEventListener(glThreadContainer.NEW_SEARCH,this._tcNewSearch,this);this.addEventListener(glThreadContainer.LOADING_UPDATE,this._tcLoadingUpdate,this);this.addEventListener(glThreadContainer.LOADED,this._tcLoaded,this);this.addEventListener(glThreadContainer.CHANGED,
this._tcChanged,this);this._main.gmail.environment.addEventListener(glEnvironment.CREATE_LABEL,this._envLabelChanged,this);this._main.gmail.environment.addEventListener(glEnvironment.RENAME_LABEL,this._envLabelChanged,this);this._main.gmail.environment.addEventListener(glEnvironment.DELETE_LABEL,this._envLabelChanged,this);this.search()},unload:function(){this.removeEventListener(glThreadContainer.NEW_SEARCH,this._tcNewSearch,this);this.removeEventListener(glThreadContainer.LOADING_UPDATE,this._tcLoadingUpdate,
this);this.removeEventListener(glThreadContainer.LOADED,this._tcLoaded,this);this._main.gmail.environment.removeEventListener(glEnvironment.CREATE_LABEL,this._envLabelChanged,this);this._main.gmail.environment.removeEventListener(glEnvironment.RENAME_LABEL,this._envLabelChanged,this);this._main.gmail.environment.removeEventListener(glEnvironment.DELETE_LABEL,this._envLabelChanged,this);this.base()},_createSearch:function(){var typeSettings=this._main.prefs.getPref("labels.types");var status=this._main.labelsData.getStatusData();
var statuses=this._main.labelsData.getLabelsArray("statuses",false,true);var orConditions=new glSearchOrConditions;var seenStatuses={};for(c in typeSettings.statuses.core)if(status[c]&&c!="finished"){seenStatuses[status[c]]=true;orConditions.addCondition(glSearch.l(status[c]))}for(var i=0;i<statuses.length;i++)if(statuses[i]&&statuses[i]!=status.finished&&!seenStatuses[statuses[i]])orConditions.addCondition(glSearch.l(statuses[i]));var search=new glSearch(this._main.gmail);search.addCondition(orConditions);
if(this._main.labelsData.hasLabel(status.finished))search.addCondition("-"+glSearch.l(status.finished));return search},_envLabelChanged:function(evt){var prefix=this._main.prefs.getPref("labels.types.statuses.prefix");if(gtdLabelsData.testPrefix(evt.label,prefix))this.update(this._createSearch());this._clearCache()},_tcNewSearch:function(evt){this._clearCache()},_tcLoadingUpdate:function(evt){this._clearCache()},_tcLoaded:function(evt){this._clearCache()},_tcChanged:function(evt){this._clearCache()},
_clearCache:function(){this._isCached=false},_extractCountFromThreads:function(){if(this._isCached)return;this._labelCount={};this._isCached=false;var threads=this.threads;var labelCount=this._labelCount;var labels=null;var threadIdx=threads.length;while(threadIdx--){labels=threads[threadIdx].labels;for(var j=0;j<labels.length;j++)if(labels[j][0]!="^")if(labelCount[labels[j]])labelCount[labels[j]]++;else labelCount[labels[j]]=1}this._isCached=true},getTotalCount:function(){return this.threads.length},
getLabelCount:function(label){this._extractCountFromThreads();return this._labelCount[label]||0},getLabelCountObject:function(safeClone){this._extractCountFromThreads();if(safeClone){var c={};for(l in this._labelCount)c[l]=this._labelCount[l];return c}else return this._labelCount},isTypeActive:function(type){var hadLabel=false;if(this._typeActive[type]&&this._labelCount)if(this.threads.indexOf(this._typeActive[type].thread)>-1&&this._typeActive[type].thread.labels.indexOf(this._typeActive[type].label)>
-1)return true;else{this._typeActive[type]=null;hadLabel=true}this._extractCountFromThreads();if(type=="misc"){var typeSettings=this._main.prefs.getPref("labels.types");var labelsData=this._main.labelsData;var t=null;var labels=null;var threadIdx=this.threads.length;while(threadIdx--){labels=this.threads[threadIdx].labels;for(var i=0;i<labels.length;i++)if(labels[i][0]!="^"){t=labelsData.getLabelType(labels[i],t,typeSettings);if(t=="misc"){this._typeActive[type]={thread:this.threads[threadIdx],label:labels[i]};
return true}}}}else{var prefix=this._main.prefs.getPref("labels.types."+type+".prefix");var re=gtdLabelsData.getPrefixRE(prefix);var labels=null;var threadIdx=this.threads.length;while(threadIdx--){labels=this.threads[threadIdx].labels;for(var i=0;i<labels.length;i++)if(re.test(labels[i])){this._typeActive[type]={thread:this.threads[threadIdx],label:labels[i]};return true}}}if(hadLabel)this.dispatchEvent({name:gtdStatusThreadContainer.LABEL_ZERO,type:type});return false},isStatusConstrained:function(searchConditions,
statusData){if(!statusData){statusData={labels:this._main.labelsData.getLabelsArray("statuses"),hash:{}};for(var i=0;i<statusData.labels.length;i++)statusData.hash[glSearch.l(statusData.labels[i])]=true}var pass=false;if(searchConditions instanceof glSearchOrConditions){if(searchConditions.conditions.length>0){pass=true;for(var i=0;i<searchConditions.conditions.length;i++){var condition=searchConditions.conditions[i];if(condition instanceof glSearchConditions)pass=this.isStatusConstrained(condition,
statusData);else if(condition=="");else if(statusData.hash[condition])pass=true;if(!pass)break}}}else{pass=false;for(var i=0;i<searchConditions.conditions.length;i++){var condition=searchConditions.conditions[i];if(condition instanceof glSearchConditions)pass=this.isStatusConstrained(condition,statusData);else if(condition=="");else if(statusData.hash[condition])pass=true;if(pass)break}}return pass}},{LABEL_ZERO:"label_zero"});
