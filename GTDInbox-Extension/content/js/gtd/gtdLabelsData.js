var gtdLabelsData=giBase.extend({_main:null,_labelsTrees:null,_labels:null,_labelsLower:null,constructor:function(main){this._main=main;this._labels={};this._labelsLower=[];this._main.gmail.environment.addEventListener(glEnvironment.ENVIRONMENT_DATA_RECEIVED,this._refreshLabels,this);this._main.gmail.environment.addEventListener(glEnvironment.CREATE_LABEL,this._refreshLabels,this);this._main.gmail.environment.addEventListener(glEnvironment.RENAME_LABEL,this._refreshLabels,this);this._main.gmail.environment.addEventListener(glEnvironment.DELETE_LABEL,
this._refreshLabels,this);this._main.gmail.environment.update();this._refreshLabels(true)},unload:function(){if(this._main&&this._main.gmail&&this._main.gmail.environment){this._main.gmail.environment.removeEventListener(glEnvironment.ENVIRONMENT_DATA_RECEIVED,this._refreshLabels,this);this._main.gmail.environment.removeEventListener(glEnvironment.CREATE_LABEL,this._refreshLabels,this);this._main.gmail.environment.removeEventListener(glEnvironment.RENAME_LABEL,this._refreshLabels,this);this._main.gmail.environment.removeEventListener(glEnvironment.DELETE_LABEL,
this._refreshLabels,this)}this._main=null;this._labelsTrees=null;this._labelsLower=null;this._labels=null},_refreshLabels:function(evt){giLogger.log("st","gtdLabelsData._refreshLabels",this._main?this._main.pageId:giLogger.UNKNOWN_PAGE_ID);var singleLabelChange=false;if(evt.name==glEnvironment.ENVIRONMENT_DATA_RECEIVED)this._main.gmail.environment.removeEventListener(glEnvironment.ENVIRONMENT_DATA_RECEIVED,this._refreshLabels,this);else if(evt.label)singleLabelChange=true;this._labels={};var typeSettings=
this._main.prefs.getPref("labels.types");var prefixes={};for(t in typeSettings)if(t!="misc")prefixes[t]=new RegExp("^"+giUtil.prepRE(typeSettings[t].prefix),"i");var statusDefaultsLower={};for(d in typeSettings.statuses.core){var label=typeSettings.statuses.prefix+typeSettings.statuses.core[d].name;statusDefaultsLower[label.toLowerCase()]={key:d,label:label}}var type=null;var labels=this._main.gmail.environment.getUserLabels();var added=null;var changedStatuses=false;if(!singleLabelChange)added=[];
for(var i=0;i<labels.length;i++){var label=labels[i].name;if(!type||!prefixes[type]||!prefixes[type].test(label)){type="misc";for(t in typeSettings)if(prefixes[t]&&prefixes[t].test(label)){type=t;break}}if(!this._labels[type])this._labels[type]=[];this._labels[type].push(label);this._labelsLower.push(label.toLowerCase());if(type=="statuses")if(statusDefaultsLower[label.toLowerCase()]&&statusDefaultsLower[label.toLowerCase()].name!=label){typeSettings.statuses.core[statusDefaultsLower[label.toLowerCase()].key].name=
label.replace(typeSettings.statuses.prefix,"");changedStatuses=true}if(!singleLabelChange)added.push(label)}if(changedStatuses)this._main.prefs.setPref("labels.types.statuses.core",typeSettings.statuses.core,true);if(singleLabelChange)switch(evt.name){case glEnvironment.CREATE_LABEL:this.dispatchEvent({name:gtdLabelsData.LABEL_CHANGED,added:[evt.label]});break;case glEnvironment.RENAME_LABEL:this.dispatchEvent({name:gtdLabelsData.LABEL_CHANGED,added:[evt.newLabel],removed:[evt.label]});break;case glEnvironment.DELETE_LABEL:this.dispatchEvent({name:gtdLabelsData.LABEL_CHANGED,
removed:[evt.label]});break}else this.dispatchEvent({name:gtdLabelsData.LABEL_CHANGED,added:added})},getChildLabels:function(label,labels){if(!labels)labels=this.getLabelsArray(this.getLabelType(label));var found=[];var idx=labels.indexOf(label);if(idx==-1)for(var i=0;i<labels.length;i++){if(labels[i].indexOf(label)==0){idx=i;break}}else idx++;if(idx>-1){label+="/";while(idx<labels.length&&labels[idx].indexOf(label)==0){found.push(labels[idx]);idx++}}return found},getLabelType:function(labelname,
type,typeSettings){if(!typeSettings)typeSettings=this._main.prefs.getPref("labels.types");if(type&&type!="misc"&&gtdLabelsData.testPrefix(labelname,typeSettings[type].prefix))return type;var type="misc";for(t in typeSettings)if(t!="misc"&&gtdLabelsData.testPrefix(labelname,typeSettings[t].prefix)){type=t;break}return type},getLabelsEl:function(type){var doc=this._main.gmail.canvasDocument;var labelsTree=this._main.getUIObject("treeList");labelsTree.init(gtdBrowser.TYPES.LABEL,type);if(this._labels[type]){if(type==
"statuses"){var statuses=this.getLabelsArray("statuses",true,true);var statusData=this.getStatusData(true);for(var i=0;i<statuses.length;i++){var key=statusData.reverseLookup[statuses[i]];if(key!="finished")labelsTree.addItem(statuses[i])}}else for(var i=0;i<this._labels[type].length;i++)labelsTree.addItem(this._labels[type][i]);labelsTree.finishAdd()}return labelsTree},getLabelsArray:function(types,sortStatuses){if(!types)types=["_all"];else if(typeof types=="string")types=[types];var labelsArray=
[];if(types.length==1)if(types[0]=="_all")for(t in this._labels)labelsArray=labelsArray.concat(this._labels[t]);else if(sortStatuses&&types[0]=="statuses"){var statuses=this.getLabelsArray("statuses");var defaults=this._main.prefs.getPref("labels.types").statuses.core;var status=this._main.labelsData.getStatusData(true);for(d in defaults)for(var i=statuses.length-1;i>=0;i--)if(statuses[i]==status[d]){labelsArray.push(statuses[i]);statuses.splice(i,1);break}for(var i=0;i<statuses.length;i++)labelsArray.push(statuses[i])}else{if(this._labels[types[0]])labelsArray=
labelsArray.concat(this._labels[types[0]])}else for(var i=0;i<types.length;i++)labelsArray=labelsArray.concat(this._labels[types[i]]);return labelsArray},getLabelsHash:function(types){if(!types)types=["_all"];else if(typeof types=="string")types=[types];var labelsHash={};if(types.length==1)if(types[0]=="_all")for(t in this._labels)giUtil.arrayToHash(this._labels[t],false,labelsHash);else{if(this._labels[types[0]])giUtil.arrayToHash(this._labels[types[0]],false,labelsHash)}else for(var i=0;i<types.length;i++)giUtil.arrayToHash(this._labels[types[i]],
false,labelsHash);return labelsHash},hasLabel:function(labelname,allowPlaceHolder){if(!labelname)giLogger.error("Null labelname param","gtdLabelsData.hasLabel",this._main?this._main.pageId:giLogger.UNKNOWN_PAGE_ID);if(this._labelsLower.indexOf(labelname.toLowerCase())>-1)return true;else if(allowPlaceHolder){var labels=this.getLabelsArray(this.getLabelType(labelname));for(var i=0;i<labels.length;i++)if(labels[i].indexOf(labelname)==0)return true;return false}},getCorrectlyFormattedLabel:function(labelname,
failsafe,labelType){if(!labelType)labelType=this.getLabelType(labelname);labelname=labelname.toLowerCase();var labels=this._labels[labelType];if(labels)for(var i=0;i<labels.length;i++)if(labels[i].toLowerCase()==labelname)return labels[i];return failsafe},getStatusData:function(incReverseLookup){var typeSettings=this._main.prefs.getPref("labels.types");var status={};status.prefix=typeSettings.statuses.prefix;status["next_action"]=status.prefix+typeSettings.statuses.core.next_action.name;status["action"]=
status.prefix+typeSettings.statuses.core.action.name;status["waiting_on"]=status.prefix+typeSettings.statuses.core.waiting_on.name;status["some_day"]=status.prefix+typeSettings.statuses.core.some_day.name;status["finished"]=status.prefix+typeSettings.statuses.core.finished.name;if(incReverseLookup){status.reverseLookup={};status.reverseLookup[status["action"]]="action";status.reverseLookup[status["waiting_on"]]="waiting_on";status.reverseLookup[status["some_day"]]="some_day";status.reverseLookup[status["finished"]]=
"finished"}return status},allowMultipleStatuses:function(label,statusData,typeSettings){if(this._main.prefs.getPref("allow_multiple_statuses"))return true;else if(label){if(!statusData)statusData=this.getStatusData(true);if(!typeSettings)typeSettings=this._main.prefs.getPref("labels.types");var d=statusData.reverseLookup[label];return typeSettings.statuses.core[d]&&typeSettings.statuses.core[d].notExclusive}else return false},getDeadlineDay:function(day){var label=this._main.prefs.getPref("labels.types.deadlines.prefix")+
"D/"+day;label=this.getCorrectlyFormattedLabel(label,label);return label},getDeadlineMonth:function(month){var label=this._main.prefs.getPref("labels.types.deadlines.prefix")+"M/"+month;label=this.getCorrectlyFormattedLabel(label,label);return label},getDeadlineLabel:function(){var label=this._main.prefs.getPref("labels.types.deadlines.prefix")+"Deadline";label=this.getCorrectlyFormattedLabel(label,label);return label}},{LABEL_CHANGED:"label_changed",getPrefixRE:function(prefix){if(!prefix)return null;
return new RegExp("^"+giUtil.prepRE(prefix.toLowerCase()),"i")},testPrefix:function(labelname,prefix){return gtdLabelsData.getPrefixRE(prefix).test(labelname)},removePrefix:function(labelname,prefix){return labelname.replace(new RegExp("^"+giUtil.prepRE(prefix),"i"),"")}});gtdLabelsData.implement(giEventDispatcher);
