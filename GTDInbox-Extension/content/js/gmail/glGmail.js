var glGmail=giBase.extend({doc:null,canvasDocument:null,window:null,page:null,trafficWatcher:null,environment:null,actions:null,settings:null,_ui:null,constructor:function(doc,pageId){this.pageId=pageId;giLogger.log("st","glGmail.constructor",this.pageId);this.doc=doc;this.canvasDocument=doc;this.window=doc.defaultView;this._ui={};giLogger.log("glGmail set up pageWrapper","glGmail.constructor",this.pageId);this.page=new glPageWrapper;this.page.addEventListener(glPageWrapper.UI_READY,this._baseUIReady,
this);this.page.addEventListener(glPageWrapper.VIEW_CHANGED,this._baseViewChanged,this);giLogger.log("glGmail set up traffic watcher","glGmail.constructor",this.pageId);this.trafficWatcher=new glTrafficWatcher;this.trafficWatcher.connect(this);giLogger.log("glGmail set up environment","glGmail.constructor",this.pageId);this.environment=new glEnvironment;giLogger.log("glGmail set up actions","glGmail.constructor",this.pageId);this.actions=new glActionManager;giLogger.log("glGmail set up settings",
"glGmail.constructor",this.pageId);this.settings=new glSettings(this)},connect:function(){giLogger.log("Connecting glGmail object to page","glGmail.connect",this.pageId);this.page.addEventListener(glPageWrapper.LOADED,this._connectPageReady,this);this.page.connect(this);giLogger.log("Connection complete","glGmail.connect",this.pageId)},_connectPageReady:function(){giLogger.log("st","glGmail._connectPageReady",this.pageId);this.page.removeEventListener(glPageWrapper.LOADED,this._connectPageReady,this);
if(!/ui=2/.test(this.page.getGlobal(11)))giLogger.logConcern("glGmail only works with version 2 of GMail: "+this.page.getGlobal(11),"glGmail.connect",this.pageId);giLogger.log("glGmail connect actions","glGmail.connect",this.pageId);this.actions.connect(this);giLogger.log("glGmail connect environment","glGmail.connect",this.pageId);this.environment.connect(this);giLogger.log("fn","glGmail._connectPageReady",this.pageId)},unload:function(){if(this._unloaded)giLogger.error("Gmail already unloaded",
"glGmail.unload",this.pageId);this._unloaded=true;for(var element in this._ui)try{this._ui[element].disconnect();this._ui[element]=null}catch(e){var f=this._ui[element]&&this._ui[element].disconnect?this._ui[element].disconnect.toString():"not-defined";giLogger.warn(e,"glGmail.unload","UI item ('element'): "+element+"\nDisconnect function:\n"+f,this.pageId)}this.trafficWatcher.shutdown();this.trafficWatcher=null;this.actions.shutdown();this.environment.shutdown();this.page.disconnect();this.canvasDocument=
null;this.window=null;this.doc=null},getSearcher:function(){return new glSearch(this)},getUIObject:function(type){var object=null;if(!this._ui[type]){var theClass="gl"+type.substr(0,1).toUpperCase()+type.substr(1);giLogger.log('Creating object: "'+theClass+'"',"glGmail",this.pageId);try{object=new window[theClass]}catch(e){giLogger.error("Failure instantiating "+theClass+" ui object:\n"+e.message,"glGmail.getUIObject",this.pageId)}object.connect(this);if(object.isCacheable())this._ui[type]=object}else object=
this._ui[type];return object},getCurrentViewObject:function(){if(!this.page.isUIReady())return null;if(typeof this._ui["currentViewObject"]!="undefined")return this._ui["currentViewObject"];var uiObject="";switch(this.page.getActiveViewType()){case "tl":uiObject="threadListView";break;case "cv":uiObject="conversationView";break;case "co":uiObject="composeView";break;case "ct":uiObject="contactsView";break;case "s":uiObject="settingsView";break}if(uiObject=="")return null;else this._ui["currentViewObject"]=
this.getUIObject(uiObject);return this._ui["currentViewObject"]},_baseUIReady:function(evt){giLogger.log("Base UI Ready","glGmail._baseUIReady",this.pageId);giLogger.log("Attach offline detection","glGmail._baseUIReady",this.pageId);this.offline=new glOffline(this);giLogger.log("Attach lightbox","glGmail._baseUIReady",this.pageId);this.lightbox=this.getUIObject("lightbox");giLogger.log("Add CSS","glGmail._baseUIReady",this.pageId);this.page.addCSS(giUrl.getURL("skin/glGmail.css"));this.page.addCSS(giUrl.getURL("skin/reset.css"))},
_baseViewChanged:function(evt){giLogger.log("base view changed","glGmail._baseViewChanged",this.pageId);if(typeof this._ui["currentViewObject"]!="undefined"){if(this._ui["currentViewObject"])this._ui["currentViewObject"].disconnect();delete this._ui["currentViewObject"]}}});
