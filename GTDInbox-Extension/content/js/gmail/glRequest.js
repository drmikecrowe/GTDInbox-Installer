var glRequest=giBase.extend({data:null,errors:null,url:null,_contextData:null,_gmail:null,_postString:null,_xmlRequest:null,constructor:function(gmail,urlParams,postData,contextData){if(typeof gmail=="undefined")giLogger.error("gmail is undefined","glRequest.constructor");this._gmail=gmail;if(typeof urlParams=="undefined")giLogger.error("urlParams is undefined","glRequest.constructor",this._gmail?this._gmail.pageId:giLogger.UNKNOWN_PAGE_ID);this._contextData=contextData;var ik=this._gmail.environment.getIKValue();
var protocol=this._gmail.page.location("protocol");var url=protocol+"//mail.google.com"+this._gmail.environment.getRequestURL();url+="/?ui=2&ik="+ik;this._cookie=this._gmail.page.getCookie();if(urlParams["at"]===true){var m=this._cookie.match(/GMAIL_AT\=([\d\w]+?);/i);if(m&&m.length>0)urlParams["at"]=m[1];else delete urlParams["at"]}if(typeof urlParams["rt"]=="undefined")urlParams["rt"]="j";url+=glRequest._convertToRequestString(urlParams);this.url=url;if(typeof postData!="undefined")this._postString=
glRequest._convertToRequestString(postData)},run:function(async){if(async==undefined)async=true;this._reset();this._xmlRequest=new XMLHttpRequest;var me=this;this._xmlRequest.onload=function(){me._requestCallback()};if(this._postString==null){giLogger.log("Making "+(async?"asynchronous":"synchronous")+' GET XMLHttpRequest to "'+this.url+'"',"glRequest.run",this._gmail?this._gmail.pageId:giLogger.UNKNOWN_PAGE_ID);this._xmlRequest.open("GET",this.url,async);this._xmlRequest.setRequestHeader("Cookie",
this._cookie);this._xmlRequest.send(null)}else{giLogger.log("Making "+(async?"asynchronous":"synchronous")+' POST XMLHttpRequest to "'+this.url+'"'+"\n"+'Post data: "'+this._postString+'"',"glRequest.run",this._gmail?this._gmail.pageId:giLogger.UNKNOWN_PAGE_ID);this._xmlRequest.open("POST",this.url,async);this._xmlRequest.setRequestHeader("Cookie",this._cookie);this._xmlRequest.setRequestHeader("Content-type","application/x-www-form-urlencoded");this._xmlRequest.setRequestHeader("Content-length",
this._postString.length);this._xmlRequest.setRequestHeader("Connection","close");this._xmlRequest.send(this._postString)}},_requestCallback:function(){try{giLogger.log("Response from "+this.url+"\nSize: "+this._xmlRequest.responseText.length,"glRequest._requestCallback",this._gmail?this._gmail.pageId:giLogger.UNKNOWN_PAGE_ID);if(this._xmlRequest.responseText.length<1E3)if(this._xmlRequest.responseText.indexOf("ServiceLogin?")>-1&&this._xmlRequest.responseText.indexOf("lr")>-1){var box=giPluginManager.getPluginInstance(boxMain,
this._gmail);var loadWarning=box.getUIObject("loadWarning");loadWarning.setErrorType(boxLoadWarning.XHR);giLogger.warn("Background data requests failing due to missing login information. Are cookies blocked?\nUrl: "+this.url+".\nResponse:\n"+this._xmlRequest.responseText,"glRequest._requestCallback",null,this._gmail?this._gmail.pageId:giLogger.UNKNOWN_PAGE_ID)}else giLogger.logConcern("Small response from "+this.url+":\n"+this._xmlRequest.responseText,"glRequest._requestCallback",this._gmail?this._gmail.pageId:
giLogger.UNKNOWN_PAGE_ID);var responseType=/[?&]rt=([^&]+)/.exec(this.url)[1];switch(responseType){case "j":this.data=glDataObject.createFromJSResponse(this._xmlRequest.responseText,this.url,this._gmail);break;case "h":this.data=glDataObject.createFromHTMLResponse(this._xmlRequest.responseText,this.url,this._gmail);break;default:throw new Error('Invalid response type: "'+responseType+'"');}this._xmlRequest=null}catch(e){giLogger.warn("Error in parse: "+e,"glRequest._requestCallback","url: "+this.url,
this._gmail?this._gmail.pageId:giLogger.UNKNOWN_PAGE_ID);this.errors.push(e.toString())}try{this.dispatchEvent({name:glRequest.COMPLETED,contextData:this._contextData})}catch(e){giLogger.warn("Error in dispatching glRequest.COMPLETED event: "+e,"glRequest._requestCallback","url: "+this.url,this._gmail?this._gmail.pageId:giLogger.UNKNOWN_PAGE_ID)}},_reset:function(){if(this._xmlRequest)this._xmlRequest.abort();this._xmlRequest=null;this.data=null;this.errors=[]}},{COMPLETED:"completed",createSimpleRequest:function(gmail){return new glRequest(gmail,
{view:"tl",search:"inbox",num:0})},createAddLabelRequest:function(gmail,label,threads){return new glRequest(gmail,{act:"ac_"+label,at:true,search:"inbox",view:"up"},{t:threads})},createRemoveLabelRequest:function(gmail,label,threads){return new glRequest(gmail,{act:"rc_"+label,at:true,search:"inbox",view:"up"},{t:threads})},createAddStarRequest:function(gmail,threads){return new glRequest(gmail,{act:"st",at:true,search:"inbox",view:"up"},{t:threads})},createRemoveStarRequest:function(gmail,threads){return new glRequest(gmail,
{act:"xst",at:true,search:"inbox",view:"up"},{t:threads})},createDeleteThreadRequest:function(gmail,threads){return new glRequest(gmail,{act:"tr",at:true,search:"inbox",view:"up"},{t:threads})},createSpamThreadRequest:function(gmail,threads){return new glRequest(gmail,{act:"sp",at:true,search:"inbox",view:"up"},{t:threads})},createNotSpamThreadRequest:function(gmail,threads){return new glRequest(gmail,{act:"us",at:true,search:"inbox",view:"up"},{t:threads})},createMarkThreadRequest:function(gmail,
threads){return new glRequest(gmail,{act:"rd",at:true,search:"inbox",view:"up"},{t:threads})},createCreateLabelRequest:function(gmail,label){return new glRequest(gmail,{act:"cc_"+label,at:true,view:"up",rt:"j"})},createRenameLabelRequest:function(gmail,oldLabel,label){return new glRequest(gmail,{act:"nc_"+oldLabel+"^"+label,at:true,view:"up",rt:"j"})},createDeleteLabelRequest:function(gmail,label){return new glRequest(gmail,{act:"dc_"+label,at:true,view:"up",rt:"j"})},createSettingsRequest:function(gmail){return new glRequest(gmail,
{view:"pu",rt:"j"})},_convertToRequestString:function(data){var str="";for(var prop in data)if(data[prop].constructor.name=="Array")for(var i=0;i<data[prop].length;i++)str+="&"+encodeURIComponent(prop)+"="+encodeURIComponent(data[prop][i]);else str+="&"+encodeURIComponent(prop)+"="+encodeURIComponent(data[prop]);return str}});glRequest.implement(giEventDispatcher);
